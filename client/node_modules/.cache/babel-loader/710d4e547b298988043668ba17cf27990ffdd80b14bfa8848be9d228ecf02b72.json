{"ast":null,"code":"var _jsxFileName = \"D:\\\\restauantapp\\\\client\\\\src\\\\contexts\\\\RestaurantContext.js\",\n  _s = $RefreshSig$();\n//contexts/RestaurantContext.js\n\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestaurantContext = /*#__PURE__*/createContext();\nconst RestaurantProvider = ({\n  children\n}) => {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n  const [cartItems, setCartItems] = useState([]);\n  const [totalPrice, setTotalPrice] = useState(0);\n  useEffect(() => {\n    const fetchRestaurants = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/restaurants\");\n        setRestaurants(response.data);\n      } catch (error) {\n        console.error(\"Error fetching restaurants:\", error.message);\n      }\n    };\n    fetchRestaurants();\n  }, []);\n  const handleAddItems = dish => {\n    console.log(\"Dish:\", dish);\n\n    // Check if the dish already exists in the cart\n    const existingItemIndex = cartItems.findIndex(item => item._id === dish._id);\n    if (existingItemIndex !== -1) {\n      // If the dish already exists, update the\n      // quantity or any other logic\n      console.log(`Dish already exists in the cart. \n\t\t\t\tYou may want to update the quantity.`);\n      // Example: Increment the quantity\n      const updatedCartItems = [...cartItems];\n      updatedCartItems[existingItemIndex] = {\n        ...updatedCartItems[existingItemIndex],\n        quantity: updatedCartItems[existingItemIndex].quantity + 1\n      };\n      // console.log('cart',cartItems.length);\n      // setTotalPrice(prev=>prev-dish.price)\n\n      setCartItems(updatedCartItems);\n    } else {\n      // If the dish is not in the cart, add it\n      console.log(\"Dish does not exist in the cart. Adding to the cart.\");\n      console.log(\"cart\", cartItems.length);\n      // setTotalPrice(prev=>prev-dish.price)\n\n      setCartItems([...cartItems, {\n        ...dish,\n        quantity: 1\n      }]);\n    }\n    setTotalPrice(prev => prev + dish.price);\n  };\n  const handleRemoveItems = dish => {\n    console.log(\"Dish ID to remove:\", dish);\n\n    // Check if the dish exists in the cart\n    const existingItemIndex = cartItems.findIndex(item => item._id === dish._id);\n    if (existingItemIndex !== -1) {\n      // If the dish exists, decrement the quantity \n      // or remove it from the cart\n      console.log(`Dish exists in the cart. You may want \n\t\t\t\tto decrease the quantity or remove it.`);\n      const updatedCartItems = [...cartItems];\n      if (updatedCartItems[existingItemIndex].quantity > 1) {\n        // If the quantity is greater than 1, decrement the quantity\n        updatedCartItems[existingItemIndex] = {\n          ...updatedCartItems[existingItemIndex],\n          quantity: updatedCartItems[existingItemIndex].quantity - 1\n        };\n      } else {\n        // If the quantity is 1, remove the dish from the cart\n        updatedCartItems.splice(existingItemIndex, 1);\n      }\n      setCartItems(updatedCartItems);\n      setTotalPrice(prev => prev - dish.price);\n    } else {\n      // If the dish is not in the cart, \n      // log a message or handle accordingly\n      console.log(\"Dish does not exist in the cart.\");\n    }\n  };\n  const value = {\n    restaurants,\n    selectedRestaurant,\n    setSelectedRestaurant,\n    handleAddItems,\n    handleRemoveItems,\n    totalPrice\n  };\n  return /*#__PURE__*/_jsxDEV(RestaurantContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 3\n  }, this);\n};\n_s(RestaurantProvider, \"+ezkgt5Rx5yW6+kxPfEjmOCHXbQ=\");\n_c = RestaurantProvider;\nexport { RestaurantContext, RestaurantProvider };\nvar _c;\n$RefreshReg$(_c, \"RestaurantProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","RestaurantContext","RestaurantProvider","children","_s","restaurants","setRestaurants","selectedRestaurant","setSelectedRestaurant","cartItems","setCartItems","totalPrice","setTotalPrice","fetchRestaurants","response","get","data","error","console","message","handleAddItems","dish","log","existingItemIndex","findIndex","item","_id","updatedCartItems","quantity","length","prev","price","handleRemoveItems","splice","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/restauantapp/client/src/contexts/RestaurantContext.js"],"sourcesContent":["//contexts/RestaurantContext.js\r\n\r\nimport React, { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst RestaurantContext = createContext();\r\n\r\nconst RestaurantProvider = ({ children }) => {\r\n\tconst [restaurants, setRestaurants] = useState([]);\r\n\tconst [selectedRestaurant, setSelectedRestaurant] = useState(null);\r\n\tconst [cartItems, setCartItems] = useState([]);\r\n\tconst [totalPrice, setTotalPrice] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchRestaurants = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await axios.get(\r\n\t\t\t\t\t\"http://localhost:5000/restaurants\"\r\n\t\t\t\t);\r\n\t\t\t\tsetRestaurants(response.data);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\"Error fetching restaurants:\", error.message);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfetchRestaurants();\r\n\t}, []);\r\n\r\n\tconst handleAddItems = (dish) => {\r\n\t\tconsole.log(\"Dish:\", dish);\r\n\r\n\t\t// Check if the dish already exists in the cart\r\n\t\tconst existingItemIndex = cartItems.findIndex(\r\n\t\t\t(item) => item._id === dish._id\r\n\t\t);\r\n\r\n\t\tif (existingItemIndex !== -1) {\r\n\t\t\t// If the dish already exists, update the\r\n\t\t\t// quantity or any other logic\r\n\t\t\tconsole.log(\r\n\t\t\t\t`Dish already exists in the cart. \r\n\t\t\t\tYou may want to update the quantity.`\r\n\t\t\t);\r\n\t\t\t// Example: Increment the quantity\r\n\t\t\tconst updatedCartItems = [...cartItems];\r\n\t\t\tupdatedCartItems[existingItemIndex] = {\r\n\t\t\t\t...updatedCartItems[existingItemIndex],\r\n\t\t\t\tquantity: updatedCartItems[existingItemIndex].quantity + 1,\r\n\t\t\t};\r\n\t\t\t// console.log('cart',cartItems.length);\r\n\t\t\t// setTotalPrice(prev=>prev-dish.price)\r\n\r\n\t\t\tsetCartItems(updatedCartItems);\r\n\t\t} else {\r\n\t\t\t// If the dish is not in the cart, add it\r\n\t\t\tconsole.log(\"Dish does not exist in the cart. Adding to the cart.\");\r\n\t\t\tconsole.log(\"cart\", cartItems.length);\r\n\t\t\t// setTotalPrice(prev=>prev-dish.price)\r\n\r\n\t\t\tsetCartItems([...cartItems, { ...dish, quantity: 1 }]);\r\n\t\t}\r\n\t\tsetTotalPrice((prev) => prev + dish.price);\r\n\t};\r\n\r\n\tconst handleRemoveItems = (dish) => {\r\n\t\tconsole.log(\"Dish ID to remove:\", dish);\r\n\r\n\t\t// Check if the dish exists in the cart\r\n\t\tconst existingItemIndex = cartItems.findIndex(\r\n\t\t\t(item) => item._id === dish._id\r\n\t\t);\r\n\r\n\t\tif (existingItemIndex !== -1) {\r\n\t\t\t// If the dish exists, decrement the quantity \r\n\t\t\t// or remove it from the cart\r\n\t\t\tconsole.log(\r\n\t\t\t\t`Dish exists in the cart. You may want \r\n\t\t\t\tto decrease the quantity or remove it.`\r\n\t\t\t);\r\n\r\n\t\t\tconst updatedCartItems = [...cartItems];\r\n\r\n\t\t\tif (updatedCartItems[existingItemIndex].quantity > 1) {\r\n\t\t\t\t// If the quantity is greater than 1, decrement the quantity\r\n\t\t\t\tupdatedCartItems[existingItemIndex] = {\r\n\t\t\t\t\t...updatedCartItems[existingItemIndex],\r\n\t\t\t\t\tquantity: updatedCartItems[existingItemIndex].quantity - 1,\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\t// If the quantity is 1, remove the dish from the cart\r\n\t\t\t\tupdatedCartItems.splice(existingItemIndex, 1);\r\n\t\t\t}\r\n\r\n\t\t\tsetCartItems(updatedCartItems);\r\n\t\t\tsetTotalPrice((prev) => prev - dish.price);\r\n\t\t} else {\r\n\t\t\t// If the dish is not in the cart, \r\n\t\t\t// log a message or handle accordingly\r\n\t\t\tconsole.log(\"Dish does not exist in the cart.\");\r\n\t\t}\r\n\t};\r\n\r\n\tconst value = {\r\n\t\trestaurants,\r\n\t\tselectedRestaurant,\r\n\t\tsetSelectedRestaurant,\r\n\t\thandleAddItems,\r\n\t\thandleRemoveItems,\r\n\t\ttotalPrice,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<RestaurantContext.Provider value={value}>\r\n\t\t\t{children}\r\n\t\t</RestaurantContext.Provider>\r\n\t);\r\n};\r\n\r\nexport { RestaurantContext, RestaurantProvider };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}